/* Only on wide screens do we want the float effect at all - certainly don't
   want a vertical menu to be floating as that would cover most the screen!
   
   This min width is determined by looking at about how much it needs for the
   full horizontal nav bar on my screen. */
@media screen and (min-width: 850px) {
  /*.scrolled-down*/ .header {
    .floating-header {
      position: fixed;
      top: 0px;
      left: 0px;
      z-index: 20;

      width: 100%;
      height: 58px;

      background-color: white; /* This ensures it has a sane bg as it starts to be on top of random content. */
      border-bottom: solid 1px $plain-md; /* And just gives gives a very subtle separation that doesn't visually stand out, but does help to keep partially obscured text underneath as you scroll through a half-line look less sloppy. */
    }

    .top-left {
      padding: 0px;
      img {
        max-height: 60px;
      }
    }

    #top-navigation {
      margin-top: 0px; /* No room to spare */
    }

    .floating-header-spacer {
      /* Since the header is fixed position,
        it doesn't normally take up space in the browser flow.
        The padding here puts a space in the document where the
        header should be so other content isn't pushed too far up. */
      /* It uses a percentage of the width for responsive height, similar
         to a video aspect ratio trick you can read about on the internet. */
      // padding-top: 10%; /* Determined by looking at the existing header which is 1200 wide and 120 tall by default */

      padding-top: 58px; /* Matches the header which now doesn't change */
    }
  }
}

.public-container {
  padding: 0px;
}

// define general plank/container sizes
.plank {
  width: 100%;

  .section-container {
    @extend .container;

    max-width: 1440px;
    padding: 0px;

    // set default padding around section column content
    & > section > div:not(.no-pad) {
      padding: 2.25em 0.938em 1.5em 0.938em;

      &:first-child {
        padding-left: 1.8em;
      }

      &:last-child {
        padding-right: 1.8em;
      }
    }

    & > section > div.no-pad {
      padding-top: 0em;
      padding-bottom: 0em;

      &:not(:first-child):not(:last-child) {
        padding: 0em;
      }
    }
  }
}

// define plank color sets
.plank {
  // set default font color to dark incase default isn't set
  color: $txt-dk;

  &.primary-lt {
    background-color: $primary-md;
    color: $txt-lt;
    a {
      color: $link-exlt;
    }

    .section-container {
      background-color: $primary-lt;
    }
  }

  &.primary-md {
    background-color: $primary-dk;
    color: $txt-lt;

    a {
      color: $link-lt;
    }
    
    .section-container {
      background-color: $primary-md;
    }
  }

  &.secondary-lt {
    background-color: $secondary-md;

    a {
      color: $link-dk;
    }
    .section-container {
      background-color: $secondary-lt;
    }
  }

  &.secondary-md {
    background-color: $secondary-dk;
    color: $txt-lt;

    a {
      color: $link-dk;
    }

    .section-container {
      background-color: $secondary-md;
    }
  }

  &.tertiary-lt {
    background-color: $tertiary-md;
    a {
      color: $link-dk;
    }

    .section-container {
      background-color: $tertiary-lt;
    }
  }

  &.tertiary-md {
    background-color: $tertiary-dk;
    color: $txt-lt;

    a {
      color: $link-dk;
    }
    
    .section-container {
      background-color: $tertiary-md;
    }
  }

  &.plain-lt {
    background-color: $plain-md;
    a {
      color: $link-dk;
    }

    .section-container {
      background-color: $plain-lt;
    }
  }

  &.plain-md {
    background-color: $plain-dk;
    a {
      color: $link-dk;
    }
    
    .section-container {
      background-color: $plain-md;
    }
  }

  &.knockout-lt {
    background-color: $knockout-md;
    color: $txt-lt;

    a {
      color: $link-dk;
    }
    
    .section-container {
      background-color: $knockout-lt;
    }
  }

  &.knockout-md {
    background-color: $knockout-dk;
    color: $txt-lt;

    a {
      color: $link-dk;
    }
    
    .section-container {
      background-color: $knockout-md;
    }
  }

  // set light/dark font overrides
  &.light {
    color: $txt-lt;
  }

  &.dark {
    color: $txt-dk;
  }
}

#banner {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}

#banner .top-left {
  @extend .col-sm-4;
}

#banner .top-left img {
  z-index: 12; /* puts it on top of the image below */
  position: relative; /* needed for z-index to take effect */
  @media screen and (min-width: $screen-sm-max) {
    display: inline; /* On non-small screens, we want it to be left-aligned like the other text */
  }
}

.should-overlap-logo {
  /* overlap the z in the image. This percentage will have to change if the image dimensions change. */
  /* The Z overlap I used here is 44 px. The image width right now is about 1160px. */
  margin-top: -2.8%; /* This is the height of the Z that we want to overlap divided by the width of this element - all size percentages are based on the element width so using this ratio and assuming both images scale at the same rate (they do because they are also max width based on the browser size), this keeps the same Z overlap too, even as the size changes. */

  /* If we're on a small screen, the bootstrap columns above will go vertical
     instead of horizontal. In that case, we no longer want to overlap - if we
     did, it would cover up the final nav menu item instead of the Z! */
  @media screen and (max-width: $screen-sm-min) {
    margin-top: 0px;
  }
}

#banner .navigation-holder {
  @extend .col-sm-8;
}

#top-navigation {
  margin-top: 24px;

  /* As we get smaller, the logo shrinks, so we move this up a bit too
     so they stay fairly aligned */
  @media screen and (max-width: 980px) {
    margin-top: 10px;
  }
  /* Note that smaller than this and bootstrap will change it to vertical anyway */
}

.open-application-notification {
  @extend .alert;
  @extend .alert-info;
}

.infographic-column {
  @extend .col-sm-4;
  @extend .text-center;

  h3 {
    text-transform: uppercase;
    font-weight: bold;
  }

  .discover-icon, .develop-icon, .connect-icon {
    height: 200px;
    width: 200px;
    display: inline-block;
  }

  .discover-icon {
    background: url(image_path('bz_icons.svg')) 0 -1050px;
  }

  .develop-icon {
    background: url(image_path('bz_icons.svg')) 0 -840px;
  }

  .connect-icon {
    background: url(image_path('bz_icons.svg')) 0 -1680px;
  }
}

.mission-photo {
  position: relative;
  width: 100%;
  padding-bottom: 75%;
  background-image: url(image_path("bz_group_photo.jpg"));

  p {
    position: absolute;
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;

    padding: 10%;
    font-size: 150%;

    background-color: rgba(0, 0, 0, 0.4);
    color: white;
  }
}

.form-option-details {
  display: none;
  padding-left: 2em;
}

#top-navigation {
  font-weight: bold;
  text-align: center;

  /* On larger screens, where bootstrap hasn't made us vertical yet,
     we want to right align the nav so it is opposite the logo on
     the screen. When smaller, it becomes a vertical list under
     the logo. */
  @media screen and (min-width: $screen-sm-min) {
    .nav {
      float: right;
    }
  }
}


/* The next block of code relates to the new Ehud designed pages */

.home-page {
  .featured-video-content {
    .section-container {
      background-image: url(image_path('home_top_feature.jpg'));
      background-position: top right;
    }

    .video-quote {
      margin-top: 3em;
      width: 33%;
    }
  }
}

.apply-page {
  .featured-video-content {
    .section-container {
      background-image: url(image_path('apply_top_feature.jpg'));
      background-position: top right;
    }

    blockquote {
      margin-top: 3em;
      width: 40%;
    }
  }
}

.volunteer-page {
  .featured-video-content {
    .section-container {
      background-image: url(image_path('group_blue.jpg'));
      background-position: top right;
    }
  }
}

.partner-page {
  .featured-video-content {
    .section-container {
      background-image: url(image_path('partners_blue.jpg'));
      background-position: top right;

      h1 {
        margin-top: 300px;
      }
    }
  }
}


.bz-large-icon {
  width: 200px;
  height: 200px;
  background-image: url(image_path('bz_icons.svg'));
  background-repeat: no-repeat;
  margin: 0px auto; /* horizontally centered in the container by default */
}

.bz-icon-rocket {
  @extend .bz-large-icon;
  background-position: 0px -1470px;
}
.bz-icon-puzzle {
  @extend .bz-large-icon;
  background-position: 0px -630px;
}
.bz-icon-wand {
  @extend .bz-large-icon;
  background-position: 0px -1260px;
}
.bz-icon-briefcase {
  @extend .bz-large-icon;
  background-position: 0px -420px;
}
.bz-icon-cap {
  @extend .bz-large-icon;
  background-position: 0px -0px;
}
.bz-icon-building {
  @extend .bz-large-icon;
  background-position: 0px -210px;
}


.right-side-bg-image {
  background-position: top right;
  background-repeat: no-repeat;
  background-size: 100%;
  background-contain: cover;
  background-image: url(image_path('who_can_apply.jpg'));
}


.featured-video-content {
  .section-container {

    height: 565px; /* Give room for the background to show */

    /* Allows absolute positioning in them by height percentage */
    > section, > section > div { height: 100%; }
  }

  .intro-play-button {
    @extend .glyphicon;
    @extend .glyphicon-play-circle;

    position: absolute;
    left: 50%;
    top: 50%;
    text-align: center;
    vertical-align: middle;
    line-height: 3em;
    margin-top: -1.5em;
    margin-left: -1.5em;
    font-size: 10em;
    color: white;
     // border: solid 5px currentColor;
     // border-radius: 100%;
    width: 3em;
    height: 3em;
    cursor: pointer;

    &:hover {
      color: #BAE3FF;
    }
  }
}

.apply-page {
  blockquote {
    border: none;
    font-style: normal;

    footer {
      color: inherit;
      &::before { content: ''; }
    }
  }

  ul {
    padding-left: 1em;
  }
}

/* The dl.timeline gives us a time and definition thing we can reuse */
.timeline {
  text-align: center;
  dt {
    margin-top: 1em;
    font-weight: bold;
  }

  dd {
    font-style: italic;
  }
}

/* Below follows fonts-mod.css contents */


body {
	color: $txt-dk;

	font-family: "Open Sans", sans-serif;
	/* probably best to load from Google Fonts CDN, */
	/* for now limit to following weights: */
	/* light 300, Normal 400, italic 400, bold 700 */

	font-size: 14px; /* or you can convert everything to ems/rems if you feel like it... */
}
h1, h2 {
	text-transform: uppercase;
}
h1, h2, h3 {
	font-weight: normal; /* fallback */
	font-weight: 400;
}
h4, h5 {
	font-weight: bold; /* fallback */
	font-weight: 700;
}
h5 {
	font-size: 14px;
}
h4 {
	font-size: 18px; 
}
h3 {
	font-size: 24px; 
	margin-top: 16px;
	margin-bottom: 8px;
}
h2 {
	font-size: 36px; 
	margin-top: 24px;
	margin-bottom: 8px;
}
h1 {
	font-size: 36px; /* (usually get different formatting anyway) */
}
b, strong {
	font-weight: bold; /* fallback */
	font-weight: 700;
}
i, em, blockquote {
	font-weight: normal; /* fallback */
	font-weight: 400;
	font-style: italic;
	/* I know, this precludes italics in bold text. Small price to pay for one less font to load... */
}

blockquote {
  font-size: 1.5em;
  border: none;
  padding-left: 0px;

  footer {
    font-weight: light; /* fallback */
    font-weight: 300;
  }
}

.feature {
	/* e.g. a div we to which we want draw some attention */
	font-size: 18px; 
}
.callout {
	/* more attention within something that's already a .feature */
	font-size: 24px;
}
.shoutout {
	/* need moar attentionz! */
	font-size: 36px;
  line-height: 42px;
}
.reverse {
	/* when text is on dark background */
	color: $plain-lt;
}
ul, ol, a, cite {
	/* ...and others... more work probably needed, let's first see what they look like without tweaks. */
}
/* 
Overall layout uses a basic three column grid. This allows combinations of 1+1+1, 1+2, 2+1 or a full-width 3. This can be done using Bootstrap's built in classes, using 4-column width (since they have a 12 col grid). That should also make small viewport responsive layout easier to implement straight out of the box.
*/
